<%
if @prd_json_api_logger_syslog_errors
  prd_jsonapi_syslog = 'true'
else
  prd_jsonapi_syslog = 'false'
end

if @prd_web_ui_logger_syslog_errors
  prd_webui_syslog = 'true'
else
  prd_webui_syslog = 'false'
end

if @prd_web_ui_enabled
  prd_webui_enable = 'true'
else
  prd_webui_enable = 'false'
end
if @prd_json_api_enabled
  prd_json_api_enable = 'true'
else
  prd_json_api_enable = 'false'
end
if @prd_oobetet_enabled
  prd_oobetet_enable = 'true'
else
  prd_oobetet_enable = 'false'
end

if @prd_oobetet_logger_syslog_errors
  prd_oobetet_syslog = 'true'
else
  prd_oobetet_syslog = 'false'
end

if @prd_gw_pagerduty_logger_syslog_errors
  prd_pagerduty_syslog = 'true'
else
  prd_pagerduty_syslog = 'false'
end

if @prd_gw_pagerduty_enabled
  prd_pagerduty_enabled = 'true'
else
  prd_pagerduty_enabled = 'false'
end

if @prd_gw_jabber_logger_syslog_errors
  prd_jabber_syslog = 'true'
else
  prd_jabber_syslog = 'false'
end

if @prd_gw_jabber_enabled
  prd_jabber_enabled = 'true'
else
  prd_jabber_enabled = 'false'
end

if @prd_gw_sns_enabled
  prd_sns_enable = 'true'
else
  prd_sns_enable = 'false'
end
if @prd_gw_sms_logger_syslog_errors
  prd_sms_logger_syslog = 'true'
else
  prd_sms_logger_syslog = 'false'
end
if @prd_gw_sms_enabled
  prd_sms_enabled = 'true'
else
  prd_sms_enabled = 'false'
end

if @prd_gw_email_smtp_starttls
  smtp_starttls = 'true'
else
  smtp_starttls = 'false'
end

if @prd_gw_email_logger_syslog_errors
  prd_email_logger_syslog = 'true'
else
  prd_email_logger_syslog = 'false'
end

if @prd_gw_email_enabled
  prd_email = 'true'
else
  prd_email = 'false'
end

if @prd_notifier_logger_syslog_errors
  notifier_logger_syslog = 'true'
else
  notifier_logger_syslog = 'false'
end

if @prd_processor_logger_syslog_errors
  prog_logger_syslog = 'true'
else
  prog_logger_syslog = 'false'
end

if @prd_processor_enabled
  processor_val = 'true'
else
  processor_val = 'false'
end

if @prd_notifier_enabled
  prd_notifier_val = 'true'
else
  prd_notifier_val = 'false'
end

if @prd_processor_archive_events
  prd_archive = 'true'
else
  prd_archive = 'false'
end
-%>
[logger]
  file = "/var/log/flapjack/flapjack.log"
  level = "<%=@prd_logger_level %>"
  syslog_errors = true
[redis]
  host = "<%=@redis_server%>"
  port = <%=@redis_port%>
  db = <%=@redis_db%>
# Processes monitoring events off the *events* queue (a redis list) and decides
# what actions to take (generate notification event, record state changes, etc)
[processor]
  enabled = <%=processor_val%>
  queue = "<%=@prd_queue_processor%>"
  notifier_queue = "<%=@prd_queue_notifier%>"
  archive_events = <%=prd_archive%>
  events_archive_maxage = <%=@prd_processor_events_archive_maxage%>
  # Flapjack sets scheduled maintenance on new check results so contacts aren't
  # notified as soon as Flapjack becomes aware of an entity to notify on.
  # This is useful is cases where your monitoring starts checking something
  # before it is completely provisioned
  # Value parsed by https://github.com/hpoydar/chronic_duration
  # You can disable this setting by specifying "0 seconds".
  new_check_scheduled_maintenance_duration = "<%=@prd_processor_new_check_scheduled_maintenance_duration%>"
  new_check_scheduled_maintenance_ignore_regex = "nadda"
  [processor.logger]
    file = "/var/log/flapjack/flapjack.log"
    level = "<%=@prd_processor_logger_level%>"
    syslog_errors = true
# Processes notification events off the *notifications* queue (a redis list) and
# works out who to notify, and on which media, and with what kind of notification
# message. It then creates jobs for the various notification gateways below.
[notifier]
  enabled = <%= prd_notifier_val %>
  queue = "<%=@prd_queue_notifier%>"
  email_queue = "<%=@prd_queue_email%>"
  sms_queue = "<%=@prd_queue_sms%>"
  sms_nexmo_queue = "sms_nexmo_notifications"
  slack_queue = "slack_notifications"
  sms_twilio_queue = "sms_twilio_notifications"
  sms_aspsms_queue = "sms_aspsms_notifications"
  sns_queue = "<%=@prd_queue_sns%>"
  jabber_queue = "<%=@prd_queue_jabber%>"
  pagerduty_queue = "<%=@prd_queue_pagerduty%>"
  threema_queue = "threema_notifications"
  notification_log_file = "<%=@prd_log_dir-%><%=@prd_notification_log%>"
  default_contact_timezone = "UTC"
  [notifier.logger]
    file = "/var/log/flapjack/flapjack.log"
    level = "INFO"
    syslog_errors = true
[nagios-receiver]
  fifo = "/var/cache/nagios3/event_stream.fifo"
[nsca-receiver]
  fifo = "/var/lib/nagios3/rw/nagios.cmd"
[gateways]
  # Generates email notifications
  [gateways.email]
    enabled = <%= prd_email %>
    # the redis queue this pikelet will look for notifications on
    queue = "<%=@prd_queue_email%>"
    [gateways.email.logger]
      level = "<%=@prd_gw_email_logger_level%>"
      syslog_errors = <%= prd_email_logger_syslog %>
    # these values are passed directly through to EventMachine::Protocols::SmtpClient configuration,
    # and can be omitted if the defaults are acceptable
    [gateways.email.smtp_config]
      from = "<%=@prd_gw_email_smtp_from%>"
      reply_to = "<%=@prd_gw_email_smtp_reply_to%>"
      host = "<%=@prd_gw_email_smtp_host%>"
      # 1025 is the default port for http://mailcatcher.me
      port = <%=@prd_gw_email_smtp_port%>
      starttls = <%= smtp_starttls%>
      [gateways.email.smtp_config.auth]
        type = "<%=@prd_gw_email_smtp_auth_type%>"
        username = "<%=@prd_gw_email_smtp_auth_username%>"
        password = "<%=@prd_gw_email_smtp_auth_password%>"
    # location of custom alert templates
    [gateways.email.templates]
      rollup_subject_text = "<%=@prd_email_rollup_subject_path-%>"
      alert_subject_text = "<%=@prd_email_alert_subject_path-%>"
      rollup_text = "<%=@prd_email_rollup_text_path-%>"
      alert_text = "<%=@prd_email_alert_text_path-%>"
      rollup_html = "<%=@prd_email_rollup_html_path-%>"
      alert_html = "<%=@prd_email_alert_html_path-%>"
  # Sends SMS notifications via MessageNet (Australia only)
  [gateways.sms]
    enabled = <%= prd_sms_enabled %>
    # the redis queue this pikelet will look for notifications on
    queue = "<%=@prd_queue_sms%>"
    endpoint = "<%=@prd_gw_sms_endpoint-%>"
    username = "<%=@prd_gw_sms_username-%>"
    password = "<%=@prd_gw_sms_password-%>"
    [gateways.sms.logger]
      file = "/var/log/flapjack/flapjack.log"
      level = "INFO"
      syslog_errors = true
    # location of custom alert templates
    #templates:
    #  rollup_text = "/etc/flapjack/templates/sms/rollup.text.erb"
    #  alert_text = "/etc/flapjack/templates/sms/alert.text.erb"
  # Sends notifications via Slack
  [gateways.slack]
    enabled = false
    queue = "slack_notifications"
    account_sid = "webhookbot"
    endpoint = "https://hooks.slack.com/services/xxx/yyy/"
    auth_token = "zzzzz"
    from = ""
    [gateways.slack.logger]
      file = "/var/log/flapjack/flapjack.log"
      level = "INFO"
      syslog_errors = true
    ## location of custom alert templates
    #templates:
    #  rollup_text = "/etc/flapjack/templates/slack/rollup.text.erb"
    #  alert_text = "/etc/flapjack/templates/slack/alert.text.erb"
  # Sends SMS notifications via Nexmo
  [gateways.sms_nexmo]
    enabled = false
    queue = "sms_nexmo_notifications"
    from = "zzzzzz"
    api_key = "APIKEY"
    secret = "s3cr3t"
    [gateways.sms_nexmo.logger]
      file = "/var/log/flapjack/flapjack.log"
      level = "INFO"
      syslog_errors = true
    ## location of custom alert templates
    #templates:
    #  rollup_text = "/etc/flapjack/templates/sms_nexmo/rollup.text.erb"
    #  alert_text = "/etc/flapjack/templates/sms_nexmo/alert.text.erb"
  # Sends SMS notifications via Twilio
  [gateways.sms_twilio]
    enabled = false
    queue = "sms_twilio_notifications"
    account_sid = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    auth_token = "yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy"
    from = "+1xxxxxxxxxx"
    [gateways.sms_twilio.logger]
      file = "/var/log/flapjack/flapjack.log"
      level = "INFO"
      syslog_errors = true
    # location of custom alert templates
    #[gateways.sms_twilio.templates]
    #  rollup_text = "/etc/flapjack/templates/sms_twilio/rollup.text.erb"
    #  alert_text = "/etc/flapjack/templates/sms_twilio/alert.text.erb"
  # Sends SMS notifications via ASPSMS ( https://www.aspsms.com/ )
  [gateways.sms_aspsms]
    enabled = false
    # the redis queue this pikelet will look for notifications on
    queue = "sms_aspsms_notifications"
    endpoint_host = "webservice.aspsms.com"
    endpoint_path = "/aspsmsx.asmx/SimpleTextSMS"
    originator = "Flapjack"
    username = "xxxx"
    password = "xxxx"
    [gateways.sms_aspsms.logger]
      file = "/var/log/flapjack/flapjack.log"
      level = "INFO"
      syslog_errors = true
    # location of custom alert templates
    #templates:
    #  rollup_text = "/etc/flapjack/templates/sms_aspsms/rollup.text.erb"
    #  alert_text = "/etc/flapjack/templates/sms_aspsms/alert.text.erb"
  # Generates SNS notifications
  [gateways.sns]
    enabled = <%= prd_sns_enable %>
    queue = "<%=@prd_queue_sns%>"
    region_name = "<%=@prd_gw_sns_region_name%>"
    # Don't forget to use an IAM user's credentials here so revocation is easy!
    access_key = "<%=@prd_gw_sns_access_key%>"
    secret_key = "<%=@prd_gw_sns_secret_key%>"
  # Connects to an XMPP (jabber) server, sends notifications (to rooms and individuals),
  # handles acknowledgements from jabber users and other commands.
  [gateways.jabber]
    enabled = <%= prd_jabber_enabled %>
    # Announce my arrival in the Multi-User Chat room
    chatbot_announce = true
    # the redis queue this pikelet will look for notifications on
    queue = "<%=@prd_queue_jabber%>"
    server = "<%=@prd_gw_jabber_server-%>"
    port = <%=@prd_gw_jabber_port%>
    jabberid = "<%=@prd_gw_jabber_jabberid-%>"
    password = "<%=@prd_gw_jabber_password-%>"
    alias = "<%=@prd_gw_jabber_alias-%>"
    # List of strings that this pikelet user will respond to
    identifiers = [ "@flapjack" ]
    # the Multi-User Chats the pikelet should join and announce to
    rooms = [
      "gimp@conference.jabber.example.com",
      "log@conference.jabber.example.com"
    ]
    [gateways.jabber.logger]
      file = "/var/log/flapjack/flapjack.log"
      level = "INFO"
      syslog_errors = true
    # location of custom alert templates
    [gateways.jabber.templates]
      rollup_text = "/etc/flapjack/templates/jabber/rollup.text.erb"
      alert_text = "/etc/flapjack/templates/jabber/alert.text.erb"
  # Sends notifications to and accepts acknowledgements from [PagerDuty](http://www.pagerduty.com/)
  # (NB = "contacts will need to have a registered PagerDuty account to use this)"
  [gateways.pagerduty]
    enabled = <%= prd_pagerduty_enabled %>
    # the redis queue this pikelet will look for notifications on
    queue = "<%=@prd_queue_pagerduty%>"
    [gateways.pagerduty.credentials]
      service_key = "1234567890"
      subdomain = "thecompany"
      username = "user"
      password = "pass"
    [gateways.pagerduty.logger]
      file = "/var/log/flapjack/flapjack.log"
      level = "INFO"
      syslog_errors = true
    # location of custom alert templates
    #[gateways.pagerduty.templates]
    #  alert_text = "/etc/flapjack/templates/pagerduty/alert.text.erb"
  # Sends SMS notifications via Threma Gateway ( https://gateway.threema.ch )
  [gateways.threema]
    enabled = false
    # the redis queue this pikelet will look for notifications on
    queue = "threema_notifications"
    endpoint_host = "msgapi.threema.ch"
    endpoint_path = "/send_simple"
    from = "xxxx"
    secret = "xxxx"
    [gateways.threema.logger]
      level = "INFO"
      syslog_errors = true
    # location of custom alert templates
    #templates:
    #  rollup_text = "/etc/flapjack/templates/threema/rollup.text.erb"
    #  alert_text = "/etc/flapjack/templates/threema/alert.text.erb"
  # Browsable web interface
  [gateways.web]
    enabled = true
    bind_address = "0.0.0.0"
    port = 3080
    timeout = 300
    # Seconds between auto_refresh of entities/checks pages.  Set to 0 to disable
    auto_refresh = 120
    access_log = "/var/log/flapjack/web_access.log"
    api_url = "http://127.0.0.1:3081/"
    # Full path to location of logo file, e.g. /etc/flapjack/custom_logo.png
    #logo_image_path = "/etc/flapjack/web/custom_logo/flapjack-2013-notext-transparent-300-300.png"
    show_exceptions = false
    [gateways.web.logger]
      file = "/var/log/flapjack/flapjack.log"
      level = "INFO"
      syslog_errors = true
  # HTTP API server
  [gateways.jsonapi]
    enabled = true
    bind_address = "0.0.0.0"
    port = 3081
    timeout = 300
    access_log = "/var/log/flapjack/jsonapi_access.log"
    base_url = "http://127.0.0.1:3081/"
    [gateways.jsonapi.logger]
      file = "/var/log/flapjack/flapjack.log"
      level = "INFO"
      syslog_errors = true
  # "out-of-band" end-to-end testing, used for monitoring other instances of
  # flapjack to ensure that they are running correctly
  [gateways.oobetet]
    enabled = false
    server = "jabber.example.com"
    port = 5222
    # jabberid, password, alias, rooms = "see the jabber pikelet"
    jabberid = "flapjacktest@jabber.example.com"
    password = "nuther-good-password"
    alias = "flapjacktest"
    # The check oobetet should watch for the state change
    watched_check = "PING"
    # The entitiy that the check should be associated with
    watched_entity = "foo.example.com"
    # The maximum amount of time allowed to pass between state changes on that check
    max_latency = 300
    # The API key for a service in PagerDuty that the oobetet will use to alert you
    pagerduty_contact = "11111111111111111111111111111111"
    # Jabber rooms to join
    rooms = [
      "flapjacktest@conference.jabber.example.com",
      "gimp@conference.jabber.example.com",
      "log@conference.jabber.example.com"
    ]
    [gateways.oobetet.logger]
      file = "/var/log/flapjack/flapjack.log"
      level = "INFO"
      syslog_errors = true
